#     ___                         __                                  
#   /'___\                       /\ \__  __                           
#  /\ \__/  __  __    ___     ___\ \ ,_\/\_\    ___     ___     ____  
#  \ \ ,__\/\ \/\ \ /' _ `\  /'___\ \ \/\/\ \  / __`\ /' _ `\  /',__\ 
#   \ \ \_/\ \ \_\ \/\ \/\ \/\ \__/\ \ \_\ \ \/\ \L\ \/\ \/\ \/\__, `\
#    \ \_\  \ \____/\ \_\ \_\ \____\\ \__\\ \_\ \____/\ \_\ \_\/\____/
#     \/_/   \/___/  \/_/\/_/\/____/ \/__/ \/_/\/___/  \/_/\/_/\/___/ 
#                                      
#                                      
histerilize ()
{ LC_ALL=C sed --debug -i '/$1/d' $HISTFILE }
# https://9to5answer.com/how-to-remove-an-entry-from-the-history-in-zsh
# Elimina del hgistorial aquello que s le indique, Hace falta salir y entrar 
# nuevamente a la terminal para ver los cambios
# the prefix LC_ALL=C prevents 'illegal anycodings_zsh byte sequence' failure.

b64d() 
{ echo  "$1" | base64 -d ; }

dec2hex()
{ echo "obase=16; $1" | bc; }

psg()
{ ps -aux | grep $1 }

qrgen()
{ qrencode --verbose --background=faedeb --foreground=9b044c -s 8 -m 2 -l M -o "$(date +"qrcode_%F_%H%M%S").png" $1 }
# Genera qr a partir de texto. Colocarlos entre 'comillas'
# Tambien puedes redirigir un archivo, por ejemplo:
# qrgen < texto.txt
# Mas ejemplos en https://www.howtogeek.com/devops/how-to-create-qr-codes-from-the-linux-command-line/
#
wifisignal()
{ sudo iw dev $1 scan | egrep "signal|SSID" | sed -e "s/\tsignal: //" -e "s/\tSSID: //" }
# Debes indicar el nombre del adaptador wifi
# Escanea las redes cercanas
#
journalctl-warning()
{ journalctl --since "1 week ago" --grep "error" -p 4 -o json | jq -r '._EXE + "\t" + .SYSLOG_IDENTIFIER' | sort -u | column -t }
# Muestra errores de poca importancia
# Hay mas comandos en zalias. Este era demasiado largo y me daba problema con las comillas (quotes)
#
bleach()
{ grep -v '^[[:space:]]*$' $1 | grep -v "^#" }
# Elimina las lineas blancas, filtra inverso los '#' y solo imprime 
# las lineas activas de un archivo conf.
#
zfun_jpegoptim()
{ cat "$1" | jpegoptim -pt --workers=4 --all-progressive --stdin --max=90 > "${1%.*}-compress.jpg" }

zfun_jpegoptim_deflate()
{ cat "$1" | jpegoptim -pt --workers=4 --all-normal --strip-all --stdin --size=10k > "${1%.*}-deflate.jpg" }
# https://virment.com/how-to-use-jpegoptim-ubuntu/
# https://ottan.jp/posts/2018/02/mac-jpeg-png-gif-compressor-homebrew/
#
zfun_oxipng()
{ oxipng "$1" --strip safe --preserve --threads 2 -i 1 -o 3 -av --out "${1%.*}-compress.png" }
#
#
