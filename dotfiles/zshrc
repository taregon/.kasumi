# ███████╗███████╗██╗  ██╗
# ╚══███╔╝██╔════╝██║  ██║
#   ███╔╝ ███████╗███████║
#  ███╔╝  ╚════██║██╔══██║
# ███████╗███████║██║  ██║
# ╚══════╝╚══════╝╚═╝  ╚═╝

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
    source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Oh-My-Zsh Installation Check --------------------------
export ZSH="$HOME/.oh-my-zsh"                  # No muevas esta linea o no se carga bien

if [ ! -d "$ZSH" ]; then
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
fi
# ------------------------------------------------------
local ZSH_CONF=~/.config/zsh                   # Define la ruta donde esta la configuración
source $ZSH/oh-my-zsh.sh
source $ZSH_CONF/kasumi-zsh_alias.conf         # Ruta de ALIAS personalizados
source $ZSH_CONF/kasumi-zsh_funtions.conf      # Ruta de FUNCIONES personalizadas
# ------------------------------------------------------
#  export LC_ALL="en_US.UTF-8" # Configura idioma en_US y codificación UTF-8 - RECIEN, me dio error en ARCH
export RANGER_LOAD_DEFAULT_RC=FALSE            # Carga mi rc.conf y no el propio de ranger
# ------------------------------------------------------
export IXOS_USER_AGENT="Mozilla/5.0 (X11; Linux x86_64; rv:105.0) Gecko/20100101 Firefox/105.0"
# ------------------------------------------------------
#    ___        ___
#  .'  _.-----.'  _|
#  |   _|-- __|   _|
#  |__| |_____|__|
#

# export FZF_DEFAULT_OPTS="--height=40% --layout=reverse --info=inline --preview 'cat {}' --border --margin=1 --padding=1"
# export FZF_DEFAULT_OPTS='--height=40% --preview="cat {}" --preview-window=right:60%:wrap'
# --preview '([[ -f {} ]] && (bat --style=numbers --color=always --line-range :500 {} || cat {})) || ([[ -d {} ]] && (tree -C {} | less)) || echo {} 2> /dev/null | head -200'
# Generador de TEMAS para fzf
# https://vitormv.github.io/fzf-themes/

export FZF_DEFAULT_OPTS="--layout=reverse"   # El prompt se abre desde arriba

export FZF_DEFAULT_OPTS=$FZF_DEFAULT_OPTS'
--color=fg:#455e60,fg+:#c8d0d6,bg:-1,bg+:#333c42
--color=hl:#a88e6b,hl+:#fbc06e,info:#94b8bc,marker:#ff62e0
--color=prompt:#AFEEAE,spinner:#ea676d,pointer:#fbc06e,header:#87afaf
--color=border:#5e6a72,label:#5e6a72,query:#d8dee2
--border="sharp" --border-label="( 󱐋 )" --preview-window="sharp" --prompt="󰘧 "
--info=right --marker="›" --pointer="▒" --separator="─" --scrollbar="▐"'

# export FZF_ALT_C_OPTS="--preview 'eza --tree --color=always {} | head -200'"
export FZF_CTRL_T_OPTS="--preview 'bat -n --color=always --line-range :500 {}'"

export EDITOR="nvim"
export VISUAL="nvim"
export TERM="xterm-256color"  # Soporte de colores para terminales modernas
# ------------------------------------------------------
# Solo afecta al comando 'bat'
# export BAT_STYLE=plain
export BAT_STYLE="full"
export BAT_THEME="base16"    # Esta bueno, usa los colores de kitty.
# ------------------------------------------------------
# COLOREAR LESS
# Primero tienes que instalar: 'source-highlight'
# export LESSOPEN="| /usr/bin/src-hilite-lesspipe.sh %s"
export LESSOPEN="| src-hilite-lesspipe.sh %s"      # Coloco únicamente el nombre, sino sirve, prueba con la ruta
export LESS='-MRFI'                                # Estas opciones funcionan en man (en realidad la aplica globalmente)
# ------------------------------------------------------
# COLOREAR MAN
# export LS_COLORS="*.zip=36:*.rar=36:*.tar=36:*.gz=36:*.tar.gz=36:*.7z=36:$LS_COLORS":
export GREP_COLORS="mt=1;33"                       # Resalta en negrita y amarillo las búsquedas con greo
export MANROFFOPT='-c'                             # Sin esto, no hay colores en man
export LS_COLORS="ex=30;42"                        # Los ejecutables tiene fondo verde
export LESS_TERMCAP_mb=$'\e[1;34m'                 # begin bold
export LESS_TERMCAP_md=$'\e[1;32m'                 # begin blink (verde)
export LESS_TERMCAP_so=$'\e[1;33m'                 # begin reverse video (amarillo)
export LESS_TERMCAP_us=$'\e[3;35m'                 # begin underline (magenta)
export LESS_TERMCAP_me=$'\e[0m'                    # reset bold/blink
export LESS_TERMCAP_se=$'\e[0m'                    # reset reverse video
export LESS_TERMCAP_ue=$'\e[0m'                    # reset underline
export MANPAGER='less -s -M +Gg -R --use-color'    # Pregúntale a GPT, ya lo tuné

# ------------------------------------------------------
# setopt clobber                             # Permite que las redirecciones de salida sobrescriban archivos existentes sin confirmación.
zstyle ':completion:*' rehash true         # Actualiza la lista de comandos para así sugerir su auto completado.
zstyle ':completion:*' verbose yes
zstyle ':completion:*' menu select

# zstyle ':completion:*:matches' group 'yes'
# zstyle ':completion:*' special-dirs true   # Muestra directorios especiales ('.' y '..') durante el auto completado de rutas.

# ------------------------------------------------------
# OPCIONALES
# autoload -U compinit                           # https://mrigank11.github.io/2018/03/zsh-auto-completion/
# ------------------------------------------------------
#         __       __ __
#  .-----|__.-----|__|  |_
#  |-- __|  |     |  |   _|
#  |_____|__|__|__|__|____|
#
# INITIAL ZINIT SETUP ----------------------------------
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
[ ! -d $ZINIT_HOME ] && mkdir -p "$(dirname $ZINIT_HOME)"
[ ! -d $ZINIT_HOME/.git ] && git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
source "${ZINIT_HOME}/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# ZINIT PLUGINS-----------------------------------------
zinit ice depth=1; zinit light romkatv/powerlevel10k
# zinit ice from"gh-r" as"command" atload'eval "$(starship init zsh)"'; zinit load starship/starship
zinit light zsh-users/zsh-autosuggestions
zinit light zsh-users/zsh-completions
zinit light zsh-users/zsh-syntax-highlighting
# zinit light wfxr/forgit
# zinit light agkozak/zsh-z
# zinit pack"default+keys" for fzf

# SNIPPETS ---------------------------------------------
# zinit snippet OMZ::plugins/git/git.plugin.zsh
# ------------------------------------------------------
# https://github.com/ohmyzsh/ohmyzsh/wiki/Plugins
plugins=( fzf zoxide )
# ------------------------------------------------------
#   __    __       __
#  |  |--|__.-----|  |_.-----.----.--.--.
#  |     |  |__ --|   _|  _  |   _|  |  |
#  |__|__|__|_____|____|_____|__| |___  |
#                                 |_____|
# HISTORY COMMAND CONFIGURATION
# https://zsh.sourceforge.io/Doc/Release/Variables-Index.html
# https://zsh.sourceforge.io/Doc/Release/Options.html#History
PROMPT_EOL_MARK="🐙"                # Define el símbolo que se mostrará al final de la línea de comandos en el prompt.
setopt APPEND_HISTORY               # Permite que múltiples sesiones de terminal agreguen comandos al historial en lugar de sobrescribirlo.
setopt BANG_HIST                    # Permite tratar el carácter '!' de manera especial durante la expansión de comandos.
setopt COMPLETE_ALIASES             # Activa la auto completado para alias.
setopt EXTENDED_HISTORY             # Registra la marca de tiempo de cada comando en el archivo de historial en el formato ":inicio:transcurrido;comando".
setopt HIST_ALLOW_CLOBBER           # Permite que las referencias al historial sobrescriban archivos, incluso cuando CLOBBER está desactivado.
setopt HIST_BEEP                    # Emite un pitido cuando se accede a un historial inexistente.
setopt HIST_EXPIRE_DUPS_FIRST       # Elimina comandos duplicados cuando se alcanza el límite de $HISTSIZE.
setopt HIST_FIND_NO_DUPS            # Evita encontrar comandos duplicados durante la búsqueda en el historial.
setopt HIST_IGNORE_ALL_DUPS         # Elimina una entrada anterior en el historial si la nueva es un duplicado.
setopt HIST_IGNORE_DUPS             # Ignora comandos duplicados en la lista del historial.
setopt HIST_IGNORE_SPACE            # Ignora comandos que comienzan con un espacio.
setopt HIST_NO_STORE                # No almacena el comando `fc -l` en el historial.
setopt HIST_REDUCE_BLANKS           # Elimina espacios adicionales de cada línea de comando antes de agregarla al historial.
setopt HIST_SAVE_NO_DUPS            # Ignora duplicados al guardar el historial en el archivo.
setopt HIST_VERIFY                  # Muestra el comando antes de ejecutarlo si se selecciona del historial.
setopt INC_APPEND_HISTORY           # Escribe en el archivo de historial de inmediato, no solo cuando la shell termina.
setopt NO_HIST_NO_FUNCTIONS         # No elimina definiciones de funciones del historial.
setopt RM_STAR_WAIT                 # Espera 10 segundos antes de ejecutar `rm` con un asterisco (*).
setopt SHARE_HISTORY                # Comparte el historial entre todas las sesiones de terminal.

# ------------------------------------------------------
# A BETTER ZSH HISTORY
# https://tinyurl.com/ynarukx9
HISTFILE=~/.cache/zsh_history
HISTSIZE=40000
SAVEHIST=40000
HISTCONTROL=ignoreboth
HISTORY_IGNORE="* --help|clear|exa|exit|man|pwd|q|yt-dlp|yt-mp3|ranger"
# ------------------------------------------------------
# HOW TO MAKE ZSH NOT STORE FAILED COMMAND
# https://superuser.com/a/902508
#  zshaddhistory() { whence ${${(z)1}[1]} >| /dev/null || return 1 }
function zshaddhistory {
    whence "${${(z)1}[1]}" >| /dev/null || return 1
    local line cmd
    line=${1%%$'\n'}
    cmd=${line%% *}
    [[ ${#line} -ge 5 && ${cmd} != ${~HISTORY_IGNORE} ]]
}
# How to change zsh-autosuggestions color
#   ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=#747A74'
# ------------------------------------------------------

ZSH_THEME="heapbytes"

# Zoxide recuerda los directorios más frecuentados
# Es como cd, pero utilizando el comando z
# Debes tener previamente instalado: pacman -S zoxide
eval "$(zoxide init zsh)"

# Carga starship-promp (NO VA)
# Debes tener previamente instalado: pacman -S starship
# eval "$(starship init zsh)"

# fzf es un buscador interactivo:
# Debes tener previamente instalado: pacman -S fzf
source <(fzf --zsh)

# Cargar el sistema de auto completado
autoload -Uz compinit
compinit

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
