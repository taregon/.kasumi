# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# ------------------------------------------------------
export ZSH="$HOME/.oh-my-zsh"
export LC_ALL="en_US.UTF-8"
source $ZSH/oh-my-zsh.sh
# ------------------------------------------------------
  export IXOS_USER_AGENT="Mozilla/5.0 (X11; Linux x86_64; rv:105.0) Gecko/20100101 Firefox/105.0"
# ------------------------------------------------------
#    ___        ___
#  .'  _.-----.'  _|
#  |   _|-- __|   _|
#  |__| |_____|__|
#

  # export FZF_DEFAULT_OPTS="--height=40% --layout=reverse --info=inline --preview 'cat {}' --border --margin=1 --padding=1"
  # export FZF_DEFAULT_OPTS="--height=40% --layout=reverse --border --info=inline --color=bg+:#3B4252,bg:#2E3440,spinner:#81A1C1,hl:#616E88,fg:#D8DEE9,header:#616E88,info:#81A1C1,pointer:#81A1C1,marker:#81A1C1,fg+:#D8DEE9,prompt:#81A1C1,hl+:#81A1C1"
  # export FZF_DEFAULT_OPTS='--height=40% --preview="cat {}" --preview-window=right:60%:wrap'
  # Generador de TEMAS para fzf
  # https://vitormv.github.io/fzf-themes/
# export FZF_DEFAULT_OPTS=$FZF_DEFAULT_OPTS'
#   --color=fg:#C0C8CF,fg+:#e3e0e4,bg:#2a2e33,bg+:#3e434c
#   --color=hl:#b4d8a9,hl+:#aeffd2,info:#afaf87,marker:#AFEEAE
#   --color=prompt:#fb6d71,spinner:#e0a4f2,pointer:#e0a4f2,header:#87afaf
#   --color=border:#383c43,label:#aeaeae,query:#d9d9d9
#   --border="rounded" --border-label="" --preview-window="border-rounded" --prompt="> "
#   --marker=">" --pointer="◆" --separator="─" --scrollbar="│"'
  # export FZF_DEFAULT_OPTS="--ansi --preview-window 'right:60%' --preview 'bat --color=always --style=header,grid --line-range :300 {}'"

  export FZF_ALT_C_OPTS="--preview 'eza --tree --color=always {} | head -200'"
  export FZF_CTRL_T_OPTS="--preview 'bat -n --color=always --line-range :500 {}'"

export LESS_TERMCAP_mb=$'\e[1;34m'     # begin bold
export LESS_TERMCAP_md=$'\e[1;32m'     # begin blink (verde)
export LESS_TERMCAP_so=$'\e[1;33m'    # begin reverse video (amarillo)
export LESS_TERMCAP_us=$'\e[3;35m'    # begin underline (magenta)
export LESS_TERMCAP_me=$'\e[0m'        # reset bold/blink
export LESS_TERMCAP_se=$'\e[0m'        # reset reverse video
export LESS_TERMCAP_ue=$'\e[0m'        # reset underline
export MANPAGER='less -s -M +Gg'

  export EDITOR="nvim"
  export VISUAL="nvim"
# ------------------------------------------------------
# Solo afecta al comando 'bat'
  # export BAT_STYLE=plain
  export BAT_STYLE="full"
  export BAT_THEME="OneHalfDark"
  # export BAT_PAGER="less -RFX"
  # export BAT_PAGER="less -FSRM -i"
  #export BAT_PAGER="less -RF"
# ------------------------------------------------------
# COLOREAR LESS
# Primero tienes que instalar: 'source-highlight'
# export LESSOPEN="| /usr/bin/src-hilite-lesspipe.sh %s"
  export LESSOPEN="| src-hilite-lesspipe.sh %s"                 # Coloco únicamente el nombre, sino sirve, prueba con la ruta
  export LESS='-RFX'
# ------------------------------------------------------
# COLOREAR MAN
# Primero tienes que instalar: 'bat-extras' y 'groff'
  # export MANPAGER="bat -l man"
  # export MANPAGER="less -R --use-color -Dd+r -Du+b"
  # export MANPAGER="less -R --use-color -Dd+r -Du+b"
  # export MANPAGER="sh -c 'col -bx | bat -l man -p'"
  # export MANPAGER="sh -c 'col -bx | bat -l man -p'"         # BAT can be used as a colorizing pager for MAN
  # export MANPAGER='sh -c "col -bx | bat --language man --style grid"'
  export GREP_COLORS="mt=1;33"                              # Resalta en negrita y amarillo las búsquedas con greo
  export MANROFFOPT='-c'
  export LS_COLORS="ex=30;42"           # Los ejecutables tiene fondo verde
  # export LS_COLORS="*.zip=36:*.rar=36:*.tar=36:*.gz=36:*.tar.gz=36:*.7z=36:$LS_COLORS":

# ------------------------------------------------------
setopt clobber                            # Permite que las redirecciones de salida sobrescriban archivos existentes sin confirmación.
zstyle ':completion:*' rehash true        # Actualiza automáticamente la lista de comandos disponibles para auto completado.
zstyle ':completion:*' special-dirs true  # Muestra directorios especiales ('.' y '..') durante el auto completado de rutas.
# ------------------------------------------------------
# OPCIONALES
# autoload -U compinit                           # https://mrigank11.github.io/2018/03/zsh-auto-completion/
# ------------------------------------------------------
#               __
#  .-----.-----|  .--.--.-----.
#  |-- __|  _  |  |  |  |  _  |
#  |_____|   __|__|_____|___  |
#        |__|           |_____|
#
# INITIAL ZPLUG SETUP ----------------------------------
  local ZSH_CONF=~/.config/zsh                   # Define la ruta donde esta la configuración
  local ZPLUG_HOME=~/.zplug/                     # Para validar si la ruta existe, mas adelante
  source $ZSH_CONF/kasumi-zsh_alias.conf         # Ruta de ALIAS personalizados
  source $ZSH_CONF/kasumi-zsh_funtions.conf      # Ruta de FUNCIONES personalizadas
# ------------------------------------------------------
    if [[ ! -f $ZPLUG_HOME/init.zsh ]]; then
        git clone https://github.com/zplug/zplug $ZPLUG_HOME
        source $ZPLUG_HOME/init.zsh && zplug update
    else
        source $ZPLUG_HOME/init.zsh
    fi
# ZPLUG PLUGINS LIST ----------------------------------
  zplug "zplug/zplug", hook-build:'zplug --self-manage'   # Se llama así mismo como plug para actualizarse
  zplug "junegunn/fzf", from:github, as:command, rename-to:fzf, hook-build:"./install --all"
  zplug "junegunn/fzf", from:github, as:plugin, use:"shell/*.zsh", defer:2
  zplug "romkatv/powerlevel10k", as:theme, depth:1
  zplug "zsh-users/zsh-autosuggestions"                   # It suggests commands as you type based on history and completions.
  zplug "zsh-users/zsh-completions"                       # Additional completion definitions for Zsh
  zplug "zsh-users/zsh-syntax-highlighting", defer:2      # Fish shell like syntax highlighting for Zsh
  zplug "zsh-users/zsh-history-substring-search", defer:3
  zplug "agkozak/zsh-z"                                   # Jump quickly to directories that you have visited frequently in the pass
  zplug "zdharma-continuum/fast-syntax-highlighting"
#  zplug "plugins/git", from:oh-my-zsh                    # Provides many aliases and a functions for git
#  zplug 'wfxr/forgit'
#
#  zplug "Aloxaf/fzf-tab"
#  zplug "b4b4r07/enhancd", use:init.sh
# ------------------------------------------------------
  if ! zplug check; then
      zplug install
  fi
  zplug load # --verbose
# ------------------------------------------------------
#   __    __       __
#  |  |--|__.-----|  |_.-----.----.--.--.
#  |     |  |__ --|   _|  _  |   _|  |  |
#  |__|__|__|_____|____|_____|__| |___  |
#                                 |_____|
# HISTORY COMMAND CONFIGURATION
# https://zsh.sourceforge.io/Doc/Release/Variables-Index.html
# https://zsh.sourceforge.io/Doc/Release/Options.html#History
  PROMPT_EOL_MARK="🐙"                # Define el símbolo que se mostrará al final de la línea de comandos en el prompt.
  setopt APPEND_HISTORY               # Permite que múltiples sesiones de terminal agreguen comandos al historial en lugar de sobrescribirlo.
  setopt BANG_HIST                    # Permite tratar el carácter '!' de manera especial durante la expansión de comandos.
  setopt COMPLETE_ALIASES             # Activa la auto completado para alias.
  setopt EXTENDED_HISTORY             # Registra la marca de tiempo de cada comando en el archivo de historial en el formato ":inicio:transcurrido;comando".
  setopt HIST_ALLOW_CLOBBER           # Permite que las referencias al historial sobrescriban archivos, incluso cuando CLOBBER está desactivado.
  setopt HIST_BEEP                    # Emite un pitido cuando se accede a un historial inexistente.
  setopt HIST_EXPIRE_DUPS_FIRST       # Elimina comandos duplicados cuando se alcanza el límite de $HISTSIZE.
  setopt HIST_FIND_NO_DUPS            # Evita encontrar comandos duplicados durante la búsqueda en el historial.
  setopt HIST_IGNORE_ALL_DUPS         # Elimina una entrada anterior en el historial si la nueva es un duplicado.
  setopt HIST_IGNORE_DUPS             # Ignora comandos duplicados en la lista del historial.
  setopt HIST_IGNORE_SPACE            # Ignora comandos que comienzan con un espacio.
  setopt HIST_NO_STORE                # No almacena el comando `fc -l` en el historial.
  setopt HIST_REDUCE_BLANKS           # Elimina espacios adicionales de cada línea de comando antes de agregarla al historial.
  setopt HIST_SAVE_NO_DUPS            # Ignora duplicados al guardar el historial en el archivo.
  setopt HIST_VERIFY                  # Muestra el comando antes de ejecutarlo si se selecciona del historial.
  setopt INC_APPEND_HISTORY           # Escribe en el archivo de historial de inmediato, no solo cuando la shell termina.
  setopt NO_HIST_NO_FUNCTIONS         # No elimina definiciones de funciones del historial.
  setopt RM_STAR_WAIT                 # Espera 10 segundos antes de ejecutar `rm` con un asterisco (*).
  setopt SHARE_HISTORY                # Comparte el historial entre todas las sesiones de terminal.

# ------------------------------------------------------
# A BETTER ZSH HISTORY
# https://tinyurl.com/ynarukx9
  HISTFILE=~/.cache/zsh_history
  HISTSIZE=40000
  SAVEHIST=40000
  HISTCONTROL=ignoreboth
  HISTORY_IGNORE="* --help|clear|exa|exit|man|pwd|q|yt-dlp|yt-mp3|ranger"
# ------------------------------------------------------
# HOW TO MAKE ZSH NOT STORE FAILED COMMAND
# https://superuser.com/a/902508
#  zshaddhistory() { whence ${${(z)1}[1]} >| /dev/null || return 1 }
  function zshaddhistory {
    whence "${${(z)1}[1]}" >| /dev/null || return 1
    local line cmd
    line=${1%%$'\n'}
    cmd=${line%% *}
    [[ ${#line} -ge 5 && ${cmd} != ${~HISTORY_IGNORE} ]]
  }
# How to change zsh-autosuggestions color
#   ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=#747A74'
# ------------------------------------------------------
# Explicacion de esta seccion
# https://tinyurl.com/5zkxzwj7
#  export FZF_DEFAULT_OPTS="
#    --info=inline
#    --multi
#    --preview '([[ -f {} ]] && (bat --color=always --italic-text=always {} || cat {})) || ([[ -d {} ]] && ( exa -T || tree -C {} )) || echo {} 2> /dev/null | head -200'
#    --prompt='∼ ' --pointer='▶' --marker='✓'
#    --bind '?:toggle-preview'
#    --bind 'ctrl-a:select-all'
#    --bind 'ctrl-y:execute-silent(echo {+} | pbcopy)'
#    --bind 'ctrl-e:execute(echo {+} | xargs -o nvim)'
#    --bind 'ctrl-v:execute(code {+})'
#  "
# ------------------------------------------------------
# Autocompleta como fish
# autoload -U +X compinit && compinit
#  autoload -U compinit; compinit
#  autoload -U +X bashcompinit && bashcompinit
#  eval "$(stack --bash-completion-script stack)"
# ------------------------------------------------------
# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
#     [[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
# ------------------------------------------------------
# source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh

# ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=06"

#     [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
